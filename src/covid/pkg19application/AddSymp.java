/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package covid.pkg19application;

import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 * This class will store user symptoms
 * @author Enxhi Tabaku
 */
public class AddSymp extends javax.swing.JFrame {

    //Declaring Static Variables For Later Use
    protected static final HashMap<String,String>MAPID=(HashMap<String,String>) UserClass.storeDBemailAndID();
    protected static String ID=MAPID.get( LogIn.email );
    protected static boolean submitClicked=false;//this variable will be used to track if user has submitted a symptoms or not
    protected static int result=0;
    protected static String s1="";
    protected static String s2="";
    protected static String s3="";
    protected static String s4="";
    protected static String s5="";
    protected static String s6="";
    protected static String s7="";
    protected static String s8="";
    protected static String s9="";
    protected static String s10="";
        
   
    /**
     * Creates new form AddSymp
     */
    public AddSymp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxTemp = new javax.swing.JCheckBox();
        jCheckBoxBreathing = new javax.swing.JCheckBox();
        jCheckBoxDryCough = new javax.swing.JCheckBox();
        jCheckBoxSoreThroat = new javax.swing.JCheckBox();
        jCheckBoxFatigue = new javax.swing.JCheckBox();
        jCheckBoxHeadache = new javax.swing.JCheckBox();
        jCheckBoxSoreness = new javax.swing.JCheckBox();
        jCheckBoxDiarrhea = new javax.swing.JCheckBox();
        jCheckBoxAnosmia = new javax.swing.JCheckBox();
        jCheckBoxRunnyNose = new javax.swing.JCheckBox();
        jButtonSubmit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Covid-19 App");
        setMinimumSize(new java.awt.Dimension(681, 440));
        setResizable(false);
        getContentPane().setLayout(null);

        jCheckBoxTemp.setBackground(new java.awt.Color(0, 0, 0));
        jCheckBoxTemp.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxTemp.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxTemp.setText("High Temperature");
        jCheckBoxTemp.setToolTipText("38^C or above");
        jCheckBoxTemp.setOpaque(false);
        jCheckBoxTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTempActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxTemp);
        jCheckBoxTemp.setBounds(140, 150, 162, 24);

        jCheckBoxBreathing.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxBreathing.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxBreathing.setText("Breathing Difficulty");
        jCheckBoxBreathing.setOpaque(false);
        jCheckBoxBreathing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBreathingActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxBreathing);
        jCheckBoxBreathing.setBounds(140, 190, 162, 24);

        jCheckBoxDryCough.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxDryCough.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxDryCough.setText("Dry Cough");
        jCheckBoxDryCough.setOpaque(false);
        jCheckBoxDryCough.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDryCoughActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxDryCough);
        jCheckBoxDryCough.setBounds(340, 190, 162, 24);

        jCheckBoxSoreThroat.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxSoreThroat.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxSoreThroat.setText("Sore Throat");
        jCheckBoxSoreThroat.setOpaque(false);
        jCheckBoxSoreThroat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSoreThroatActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxSoreThroat);
        jCheckBoxSoreThroat.setBounds(340, 150, 162, 24);

        jCheckBoxFatigue.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxFatigue.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxFatigue.setText("Fatigue");
        jCheckBoxFatigue.setOpaque(false);
        jCheckBoxFatigue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFatigueActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxFatigue);
        jCheckBoxFatigue.setBounds(540, 190, 98, 24);

        jCheckBoxHeadache.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxHeadache.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxHeadache.setText("Headache");
        jCheckBoxHeadache.setOpaque(false);
        jCheckBoxHeadache.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHeadacheActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxHeadache);
        jCheckBoxHeadache.setBounds(540, 150, 98, 24);

        jCheckBoxSoreness.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxSoreness.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxSoreness.setText("Soreness");
        jCheckBoxSoreness.setOpaque(false);
        jCheckBoxSoreness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSorenessActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxSoreness);
        jCheckBoxSoreness.setBounds(140, 230, 98, 24);

        jCheckBoxDiarrhea.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxDiarrhea.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxDiarrhea.setText("Diarrhea");
        jCheckBoxDiarrhea.setOpaque(false);
        jCheckBoxDiarrhea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDiarrheaActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxDiarrhea);
        jCheckBoxDiarrhea.setBounds(540, 230, 98, 24);

        jCheckBoxAnosmia.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxAnosmia.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxAnosmia.setText("Anosmia");
        jCheckBoxAnosmia.setToolTipText("Loss Of Smell");
        jCheckBoxAnosmia.setOpaque(false);
        jCheckBoxAnosmia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAnosmiaActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxAnosmia);
        jCheckBoxAnosmia.setBounds(140, 270, 98, 24);

        jCheckBoxRunnyNose.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxRunnyNose.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxRunnyNose.setText("Runny Nose");
        jCheckBoxRunnyNose.setOpaque(false);
        jCheckBoxRunnyNose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRunnyNoseActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBoxRunnyNose);
        jCheckBoxRunnyNose.setBounds(340, 230, 162, 24);

        jButtonSubmit.setBackground(new java.awt.Color(153, 255, 255));
        jButtonSubmit.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\Covid19\\ButtonSmallerCovid.jpg")); // NOI18N
        jButtonSubmit.setToolTipText("Submit");
        jButtonSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSubmit);
        jButtonSubmit.setBounds(590, 370, 40, 30);

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Back");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(60, 370, 80, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\CovidMENU\\Add_Symptoms.png")); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 680, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTempActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected())
        {
            result+=EnumClass.TEMPERATURE.getSymptoms();
            s2=cb.getText();
        }
        else
        {
            result-=EnumClass.TEMPERATURE.getSymptoms();
            s2="";
        }
    }//GEN-LAST:event_jCheckBoxTempActionPerformed

    private void jCheckBoxBreathingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBreathingActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.BREATHINGDIFFICULTY.getSymptoms();
            s1=cb.getText();
        }
        else{
            result-=EnumClass.BREATHINGDIFFICULTY.getSymptoms();
            s1="";
        }

    }//GEN-LAST:event_jCheckBoxBreathingActionPerformed

    private void jCheckBoxDryCoughActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDryCoughActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.DRYCOUGH.getSymptoms();
            s3=cb.getText();
        }
        else{
            result-=EnumClass.DRYCOUGH.getSymptoms();
            s3="";
        }
    }//GEN-LAST:event_jCheckBoxDryCoughActionPerformed

    private void jCheckBoxSoreThroatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSoreThroatActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.SORETHROAT.getSymptoms();
            s4=cb.getText();
        }
        else{
            result-=EnumClass.SORETHROAT.getSymptoms();
            s4="";
        }
    }//GEN-LAST:event_jCheckBoxSoreThroatActionPerformed

    private void jCheckBoxFatigueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFatigueActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.FATIGUE.getSymptoms();
            s7=cb.getText();
        }
        else{
            result-=EnumClass.FATIGUE.getSymptoms();
            s7="";
        }
    }//GEN-LAST:event_jCheckBoxFatigueActionPerformed

    private void jCheckBoxHeadacheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHeadacheActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.HEADACHE.getSymptoms();
            s5=cb.getText();
        }
        else{
            result-=EnumClass.HEADACHE.getSymptoms();
            s5="";
        }
    }//GEN-LAST:event_jCheckBoxHeadacheActionPerformed

    private void jCheckBoxSorenessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSorenessActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.SORENESS.getSymptoms();
            s8=cb.getText();
        }
        else{
            result-=EnumClass.SORENESS.getSymptoms();
            s8="";
        }
    }//GEN-LAST:event_jCheckBoxSorenessActionPerformed

    private void jCheckBoxDiarrheaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDiarrheaActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.DIARRHEA.getSymptoms();
            s9=cb.getText();
        }
        else{
            result-=EnumClass.DIARRHEA.getSymptoms();
            s9="";
        }
    }//GEN-LAST:event_jCheckBoxDiarrheaActionPerformed

    private void jCheckBoxAnosmiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAnosmiaActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.ANOSMIA.getSymptoms();
            s10=cb.getText();
        }
        else{
            result-=EnumClass.ANOSMIA.getSymptoms();
            s10="";
        }
    }//GEN-LAST:event_jCheckBoxAnosmiaActionPerformed

    private void jCheckBoxRunnyNoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRunnyNoseActionPerformed
        JCheckBox cb=(JCheckBox) evt.getSource();
        if(cb.isSelected()){
            result+=EnumClass.RUNNYNOSE.getSymptoms();
            s6=cb.getText();
        }
        else{
            result-=EnumClass.RUNNYNOSE.getSymptoms();
            s6="";
        }
    }//GEN-LAST:event_jCheckBoxRunnyNoseActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        if(result==0)
        {
            JOptionPane.showMessageDialog(null,"Log Out If You Are Healthy !","No Symptomes Ticked",JOptionPane.WARNING_MESSAGE);
        }
        else{
            addUserSymptoms("C:\\Users\\user\\Desktop\\Users_Report.txt");
            JOptionPane.showMessageDialog(null, "Probability for COVID-19: "+result+"%","Symptoms added Succesfully",JOptionPane.INFORMATION_MESSAGE);;
            submitClicked=true;
            result=0;//Reset Value
        }
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainMenu menu=new MainMenu();
        
        menu.setVisible(true);
        menu.setLocationRelativeTo(null);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Add the User Symptoms to the file
     * @param pathName the path of the file where data will be stored
     * @return Array List representing the user symptoms line of file
     */
    protected ArrayList<String> addUserSymptoms(String pathName) {

        ArrayList<String>fileUsers = new ArrayList<>();
        
        PrintWriter writer=null;
    try{
            FileWriter file=new FileWriter(pathName,true);
            writer=new PrintWriter(file);
            
            String strValueResult=String.valueOf(result);//Getting the string value of Result
            SymptomsClass user=new SymptomsClass(ID,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,strValueResult);//Calling the parametherized constructor 
            
            fileUsers.add(user.toString());//add the string rapresentation object to the list
            
            for(int i=0;i<fileUsers.size();i++){
                writer.println(fileUsers.get(i));//write to file the list items 
            }
            
            writer.close();
            
        }catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null,"An error occurred.","ERROR FILE NOT FOUND",JOptionPane.ERROR_MESSAGE); //File not Found    
            e.printStackTrace();
        }
        catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null,"An error occurred.","ERROR INDEX OUT OF BOUNDURY",JOptionPane.ERROR_MESSAGE); //Index out of boundary   
            e.printStackTrace();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,"An error occurred.","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        

        return fileUsers;//return an ArrayList of the items in the file  
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSymp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSymp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSymp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSymp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSymp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSubmit;
    protected javax.swing.JCheckBox jCheckBoxAnosmia;
    protected javax.swing.JCheckBox jCheckBoxBreathing;
    protected javax.swing.JCheckBox jCheckBoxDiarrhea;
    protected javax.swing.JCheckBox jCheckBoxDryCough;
    protected javax.swing.JCheckBox jCheckBoxFatigue;
    protected javax.swing.JCheckBox jCheckBoxHeadache;
    protected javax.swing.JCheckBox jCheckBoxRunnyNose;
    protected javax.swing.JCheckBox jCheckBoxSoreThroat;
    protected javax.swing.JCheckBox jCheckBoxSoreness;
    protected javax.swing.JCheckBox jCheckBoxTemp;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
